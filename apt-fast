# !/bin/sh
# apt-fast v1.5 by Matt Parnell http://www.mattparnell.com, GNU GPLv3
# Use this just like aptitude or apt-get for faster package downloading.

###################################################################
# CONFIGURATION OPTIONS
###################################################################

# Maximum number of connections
_MAXNUM=10

# Use aptitude or apt-fast?
# Note that for outputting the package URI list, we always use apt-get
# ...since aptitude can't do this
_APTMGR=aptitude

# Note that the manager you choose has other options - feel free
# to setup your own _DOWNLOADER or customize one of the ones below
# they're simply here as examples, and to provide sane defaults

# Download manager selection
# (choose one by uncommenting one #_DOWNLOADER line)

# aria2c:
#_DOWNLOADER='aria2c -c -j ${_MAXNUM} --input-file=/tmp/apt-fast.list --connect-timeout=600 --timeout=600 -$

# aria2c with a proxy (set username, proxy, ip and password!)
#_DOWNLOADER='aria2c -c 20 -j ${_MAXNUM} --http-proxy=http://username:password@proxy_ip:proxy_port -i apt-f$

# axel:
_DOWNLOADER='cat /tmp/apt-fast.list | xargs -l1 axel -n ${_MAXNUM} -a' # axel

###################################################################
# DO NOT EDIT BELOW THIS LINE UNLESS YOU KNOW WHAT YOU ARE DOING!
###################################################################

_unlock() {
        rmdir $LCK_FILE
}

# Check for proper priveliges
[ "`whoami`" = root ] || exec sudo "$0" "$@"

# Define our lock location
LCK_FILE=/var/lock/apt-fast.lck

mkdir $LCK_FILE || {
        echo "Either you stopped early, or apt-fast is already running."
        echo "If apt-fast isn't running, delete /var/lock/apt-fast.lck"
        echo "..and try again."
        exit 100
}

trap " [ -e ${LCK_FILE} ] && _unlock" 0 1 2 3 13 15

# Make sure one of the download managers is enabled
[ -z "$_DOWNLOADER" ] && echo "You must configure apt-fast to use axel or aria2c" && _unlock && exit 1

# If the user entered arguments contain upgrade, install, or dist-upgrade
if echo "$@" | grep -q "upgrade\|install\|dist-upgrade|full-upgrade"; then
  echo "Working...";

  # Test if apt-fast directory is present where we put packages
  if [ ! -d /var/cache/apt/archives/apt-fast ] ; then
        mkdir /var/cache/apt/archives/apt-fast;
  fi
  cd /var/cache/apt/archives/apt-fast;

  # Get the package URL's
  # note aptitude doesn't have this functionality
  # so we use apt-get only
  apt-get -y --print-uris $@ | egrep -o -e "(ht|f)tp://[^\']+" > /tmp/apt-fast.list

  # Download the packages
  eval ${_DOWNLOADER}

  # Move all packages to the apt install directory by force to ensure
  # already existing debs which may be incomplete are replaced
  mv -f *.deb /var/cache/apt/archives/

  # Install our downloaded packages
  ${_APTMGR} $@;

  echo -e "\nDone! Verify that all packages were installed successfully. If errors are found, run apt-get c$

else
   ${_APTMGR} $@;
fi

# Remove our lock
_unlock