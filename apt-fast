#!/bin/bash
# apt-fast v1.5 by Matt Parnell http://www.mattparnell.com, GNU GPLv3
# Use this just like aptitude or apt-get for faster package downloading.

###################################################################
# DO NOT EDIT BELOW THIS LINE UNLESS YOU KNOW WHAT YOU ARE DOING!
###################################################################

# Config File
source /etc/apt-fast.conf

# Check for proper priveliges
[ "`whoami`" = root ] || exec sudo "$0" "$@"

# Check if a lockfile exists
LCK_FILE=/var/run/$(basename $0).lock	
[ -f $LCK_FILE ] && { echo "$(basename $0) already running"; exit 1; }

# Remove lockfile
LCK_RM() {
rm -f $LCK_FILE
#echo lock-File $LCK_FILE deleted
}

trap "LCK_RM ; exit 1" 2 9 15

# Create and insert a PID number to lockfile 
echo $$ > $LCK_FILE
NUM=1

# Make sure one of the download managers is enabled
[ -z "$_DOWNLOADER" ] && echo "You must configure /etc/apt-fast.conf to use axel or aria2c" && LCK_RM && exit 1

# If the user entered arguments contain upgrade, install, or dist-upgrade
if echo "$@" | grep -q "upgrade\|install\|dist-upgrade|full-upgrade"; then
  echo "Working...";

  # Test if apt-fast directory is present where we put packages
  if [ ! -d /var/cache/apt/archives/apt-fast ] ; then
  	mkdir /var/cache/apt/archives/apt-fast;
  fi
  cd /var/cache/apt/archives/apt-fast;

  # Get the package URL's
  # note aptitude doesn't have this functionality
  # so we use apt-get only
  apt-get -y --print-uris $@ | egrep -o -e "(ht|f)tp://[^\']+" > /tmp/apt-fast.list
  
  # Download the packages
  eval ${_DOWNLOADER}
  
  # Move all packages to the apt install directory by force to ensure 
  # already existing debs which may be incomplete are replaced
  mv -f *.deb /var/cache/apt/archives/
  
  # Install our downloaded packages
  ${_APTMGR} $@;

  echo -e "\nDone! Verify that all packages were installed successfully. If errors are found, run apt-get clean as root and try again using apt-get directly.\n";

else
   ${_APTMGR} $@;
fi

# Downtime befor remove the lockfile
while [ $NUM -le 2 ] ; do
	NUM=`expr $NUM + 1`	
	sleep 1
done
# After error or all done remove our lockfile with a PID number
LCK_RM

exit 0
