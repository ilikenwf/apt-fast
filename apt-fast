#!/bin/bash
#set -xv
# apt-fast v1.6 by Matt Parnell http://www.mattparnell.com, GNU GPLv3
# Use this just like aptitude or apt-get for faster package downloading.
###################################################################
# DO NOT EDIT BELOW THIS LINE UNLESS YOU KNOW WHAT YOU ARE DOING!
###################################################################

# Config File
source /etc/apt-fast.conf

# Define lockfile
LCK_FILE="/var/run/$(basename $0).lock"

# Line Color var
# ex. for use: echo -e "Here is my TEST TEXT  ${cGreen} GREEN TEXT ${endColor}"
cGreen='\e[0;32m'
cRed='\e[0;31m'
cBlue='\e[0;34m'
endColor='\e[0m'



# Check for proper priveliges
[ "`whoami`" = root ] || exec sudo "$0" "$@"

# Check if a lockfile exists
if [ -f "$LCK_FILE" ]; then
  echo -e "$(basename $0) already running! ${cBlue} Please remove $LCK_FILE and try again ${endColor}"
  exit 1
fi

# Remove lockfile
LCK_RM() {
  rm -f "$LCK_FILE"
}

trap "LCK_RM ; exit 1" 2 9 15

# Create and insert a PID number to lockfile
echo $$ > "$LCK_FILE"
NUM=1

# Make sure one of the download managers is enabled
if [ -z "$_DOWNLOADER" ]; then
  echo -e "${cGreen} You must configure /etc/apt-fast.conf to use axel or aria2c ${endColor}"
  LCK_RM
  exit 1
fi

# Make sure an APT manager is enabled and available
if [ -z "$_APTMGR" ]; then
  echo -e "${cGreen} You must configure /etc/apt-fast.conf to use either apt-get or aptitude  ${endColor}"
  LCK_RM
  exit 1
elif [ ! $(command -v "$_APTMGR") ]; then
  echo -e "${cGreen} \`$_APTMGR\` command not available."
  echo -e " You must configure /etc/apt-fast.conf to use either apt-get or aptitude  ${endColor}"
  LCK_RM
  exit 1
fi

# If the user entered arguments contain upgrade, install, or dist-upgrade
for option in $@; do  # search for known options
if [ "$option" == "upgrade" ] ||
    [ "$option" == "install" ] ||
    [ "$option" == "dist-upgrade" ] ||
    [ "$option" == "full-upgrade" ]; then
  echo -e "${cGreen} \n Working... this take a while. ${endColor}"

  # Test if apt-fast directory is present where we put packages
  if [ ! -d "$DLDIR" ]; then
    mkdir -p "$DLDIR"
  fi

  cd "$DLDIR"

  # Get the package URL's
  # note aptitude doesn't have this functionality
  # so we use apt-get only
  apt-get -y --print-uris $@ | egrep -o -e "(ht|f)tp://[^\']+" > "$DLLIST"


  # Test /tmp/apt-fast.list file exists AND not zero bytes
  # download all files from the list


  if [ $(cat "$DLLIST" | wc -l) -gt 0 ] && [ ! "$DOWNLOADBEFORE" ] ; then
    cat "$DLLIST"

    echo -ne "${cRed} If you want to download the packages on your system press Y else n to abort. [Y/n]:  ${endColor}"

    while ((!updsys)); do
      read -sn1 answer
      case "$answer" in
        [JjYy])    result=1; updsys=1 ;;
        [Nn])      result=0; updsys=1 ;;
        "")        result=1; updsys=1 ;;
        *)         updsys=0 ;;
      esac
    done
  else
    result=1
  fi

  echo

  if ((result)); then
    if [ -s "$DLLIST" ]; then
      eval "${_DOWNLOADER}"
      if [ $(find "$DLDIR" -mtime -1 -printf . | wc -c) -gt 1 ]; then
        # Move all packages to the apt install directory by force to ensure
        # already existing debs which may be incomplete are replaced
        find -type f -name "*.deb" -execdir mv -ft "$APTCACHE" {} \+
      fi
    fi
  else
    LCK_RM
    exit 1
  fi

  "${_APTMGR}" $@

  echo -e "${cGreen} \nDone! Verify that all packages were installed successfully. If errors are found, run ${endColor} ${cRed}apt-fast clean${endColor} ${cGreen}as root and try again.\n ${endColor}"
  break


else
  "${_APTMGR}" $@
  break

fi
done

# Downtime befor remove the lockfile
while [ $NUM -le 2 ]; do
  NUM=`expr $NUM + 1`
  sleep 0.5
done

# After error or all done remove our lockfile with a PID number
LCK_RM
